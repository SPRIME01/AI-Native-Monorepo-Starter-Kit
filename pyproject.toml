[project]
name = "ai-native-monorepo-starter-kit"
version = "0.1.0"
requires-python = ">=3.12"
description = "AI-Native Monorepo Starter Kit with Hexagonal Architecture"
readme = "README.md"
license = {file = "LICENSE"}

[tool.uv]
# Core dependencies (always installed)
dev-dependencies = [
    # Essential tools
    "uv==0.7.19",
    "ruff==0.12.2",
    "mypy==1.16.1",
    "pre-commit==4.2.0",
    # Basic testing
    "pytest==8.4.1",
    "pytest-cov>=6.2.1",
    # Utilities
    "python-dotenv==1.1.1",
]

# Optional dependency groups
[dependency-groups]
# AI/ML Dependencies
ai = [
    "torch>=2.0.0",
    "transformers>=4.30.0",
    "scikit-learn>=1.3.0",
    "datasets>=2.14.0",
    "accelerate>=0.20.0",
    "tokenizers>=0.13.0",
    "huggingface-hub>=0.16.0",
    "wandb>=0.15.0",
    "mlflow>=2.5.0",
]

# Analytics/Data Science Dependencies
analytics = [
    "pandas>=2.0.0",
    "numpy>=1.24.0",
    "matplotlib>=3.7.0",
    "seaborn>=0.12.0",
    "plotly>=5.15.0",
    "jupyter>=1.0.0",
    "ipykernel>=6.24.0",
    "scipy>=1.11.0",
    "polars>=0.18.0",
]

# Cloud/Infrastructure Dependencies
cloud = [
    "docker>=6.0.0",
    "kubernetes>=27.0.0",
    "ansible>=8.0.0",
    "boto3>=1.28.0",
    "google-cloud-core>=2.3.0",
    "azure-identity>=1.13.0",
    "pulumi>=3.75.0",
]

# Extended Development Tools
dev = [
    "pytest-mock>=3.11.0",
    "pytest-xdist>=3.3.0",
    "pytest-dotenv>=0.5.2",
    "hypothesis>=6.82.0",
    "coverage>=7.2.0",
    "bandit>=1.7.0",
    "safety>=2.3.0",
    "typer>=0.9.0",
    "rich>=13.4.0",
]

# Database Dependencies
database = [
    "psycopg2-binary>=2.9.7",
    "sqlmodel>=0.0.8",
    "alembic>=1.11.0",
    "redis>=4.6.0",
    "pymongo>=4.4.0",
]

# Web/API Dependencies
web = [
    "fastapi>=0.100.0",
    "uvicorn>=0.23.0",
    "pydantic>=2.0.0",
    "httpx>=0.24.0",
    "aiofiles>=23.1.0",
    "jinja2>=3.1.0",
]

# Supabase Integration
supabase = [
    "supabase==2.16.0"
]

[tool.pytest.ini_options]
testpaths = ["tests"]
dotenv_files = [".env"]
addopts = "-p no:warnings --cov=libs --cov-report=term-missing"

[tool.setuptools.packages.find]
where = ["."]
include = ["libs*"]

[build-system]
requires = ["setuptools>=61.0"]
build-backend = "setuptools.build_meta"
